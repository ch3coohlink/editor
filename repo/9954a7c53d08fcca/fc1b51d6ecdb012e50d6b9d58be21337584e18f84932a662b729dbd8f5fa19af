{"id":"fc1b51d6ecdb012e50d6b9d58be21337584e18f84932a662b729dbd8f5fa19af","to":[],"value":"Object.assign($, await require('lib/common.js'))\r\nObject.assign($, await require('comp.js'))\r\nroot.style.overflow = 'hidden'\r\nconsole.clear()\r\n\r\nroot.setAttribute('style', `display:flex;height:100%;`)\r\nconst strip = { a: '#aaa', b: '#777', c: 15 }, tew = 45\r\n$.modeleditor = h('textarea')\r\nroot.append(\r\n  h('div', {\r\n    style: `width:100%;\r\n      background: repeating-linear-gradient(\r\n        -45deg, ${strip.a}, ${strip.a} ${strip.c}px,\r\n        ${strip.b} ${strip.c}px, ${strip.b} ${strip.c * 2}px);\r\n      display: flex; justify-content: center; align-items: center;`\r\n  },\r\n    $.sandbox = h('div', {\r\n      style: `resize:both;overflow:hidden;\r\n        // width:calc(100% - 50px);height:calc(100% - 50px);\r\n        // max-width:calc(100% - 10px);max-height:calc(100% - 10px);\r\n        width:100%;height:100%;\r\n        max-width:100%;max-height:100%;\r\n        box-shadow: 0 0 10px #494949;\r\n        background:white;`\r\n    })\r\n  )\r\n)\r\n\r\nconst compdir = await read('comp', { raw: true })\r\nconst version = $$.vcs.getversion(compdir)\r\nlet filelist; const reload = async () => {\r\n  component.definition = {}\r\n  component.animationmap.clear()\r\n  const d = await dir('comp'); await Promise.all(d.map(n =>\r\n    require('comp/' + n, { forceload: true, watch: false })))\r\n  filelist = new Set(await Promise.all(d.map(n =>\r\n    read('comp/' + n, { raw: true }).then(a => a.id))))\r\n  await rebuildall()\r\n  if (!component.root) { return }\r\n  // sb.env.root.append(component.root._view)\r\n}\r\nconst rebuildall = async () => {\r\n  log(`---reload model---`)\r\n  await sb.exec({ component, h })\r\n  // sb.env.root.style.overflow = 'hidden'\r\n}\r\n\r\nconst getfile = () => {\r\n  const i = version.id\r\n  return ['$$virtual$$.js', modeleditor.value, i, [version.id]]\r\n}, sb = $$.sandboxtab($$.vcs, { type: 'virtual', getfile })\r\nsb.registersandboxclear($)\r\nsandbox.append(sb)\r\n\r\nconst save = () => { }\r\nconst load = async () => { }\r\n\r\nmodeleditor.value = `\r\nObject.assign($, await require('lib/common.js'))\r\nconst m = component.root = h('comp@graph')\r\nroot.append(m._view)\r\nm.add()\r\n// m.add()\r\n`.trim()\r\n\r\nawait load()\r\nawait reload()\r\n\r\non('file change', ({ o }) => {\r\n  if (o.id === compdir.id || filelist.has(o.id)) { reload() }\r\n})"}